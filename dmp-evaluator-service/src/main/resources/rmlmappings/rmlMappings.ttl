@prefix dcso-ont: <https://w3id.org/dcso/ns/core#> .
@prefix dcso: <https://w3id.org/dcso/ns/core/> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dmp: <http://purl.org/dmp#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix exf: <http://example.org/functions#> .
@prefix idlab-fn: <https://w3id.org/imec/idlab/function#> .
@prefix grel: 	<http://users.ugent.be/~bjdmeest/function/grel.ttl#> .

@base <https://w3id.org/dcso/ns/core>.

# Mappings based on ex9-dmp-long.json
# Structure of the taxonomy can be found here: https://github.com/RDA-DMP-Common/RDA-DMP-Common-Standard
# Ontology can be found here: https://semantics.id/dcso/ns/core/ontology.ttl

#################################################################
# Logical Source for the JSON file
#################################################################

<#DMPSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp" .

#################################################################
# Mapping for the DMP
#################################################################
   
<#DMPMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#DMPSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:DMP ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant grel:string_md5 ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate grel:valueParameter ;
                            rr:objectMap [ rml:reference "dmp_id.identifier" ]
                        ]             
                    ]
                ]
            ]          
        ]
    ] ;

    # title
    rr:predicateObjectMap [
        rr:predicate dcterms:title ;
        rr:objectMap [ rml:reference "title" ] ;
    ] ;

    # description
    rr:predicateObjectMap [
        rr:predicate dcterms:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;

    # language
    rr:predicateObjectMap [
        rr:predicate dcso-ont:language ;
        rr:objectMap [ rml:reference "language" ] ;
    ] ;

    # created
    rr:predicateObjectMap [
        rr:predicate dcso-ont:created ;
        rr:objectMap [ rml:reference "created" ; rr:datatype xsd:dateTime ] ;
    ] ;

    # modified
    rr:predicateObjectMap [
        rr:predicate dcso-ont:modified ;
        rr:objectMap [ rml:reference "modified" ; rr:datatype xsd:dateTime ] ;
    ] ;

    # dmp_id
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasDMPId ;
        rr:objectMap [ rr:parentTriplesMap <#DMPIDMapping> ] ;
    ] ;

    # contact
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasContact ;
        rr:objectMap [ rr:parentTriplesMap <#ContactMapping> ] ;
    ] ;

    # contributor
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasContributor ;
        rr:objectMap [ rr:parentTriplesMap <#ContributorMapping> ] ;
    ] ;

    # ethical_issues_exist
    rr:predicateObjectMap [
        rr:predicate dcso-ont:ethicalIssuesExist ;
        rr:objectMap [ rml:reference "ethical_issues_exist" ] ;
    ] ;

    # ethical_issues_report
    rr:predicateObjectMap [
        rr:predicate dcso-ont:ethicalIssueDescription ;
        rr:objectMap [ rml:reference "ethical_issues_description" ] ;
    ] ;

    # ethical_issues_description
    rr:predicateObjectMap [
        rr:predicate dcso-ont:ethicalIssuesReport ;
        rr:objectMap [ rml:reference "ethical_issues_report" ] ;
    ] ;

    # project
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasProject ;
        rr:objectMap [ rr:parentTriplesMap <#ProjectMapping> ] ;
    ] ;

    # dataset
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasDataset ;
        rr:objectMap [ rr:parentTriplesMap <#DatasetMapping> ] ;
    ] .


#################################################################
# Mapping for DMP: dmp_id
#################################################################
<#DMPIDMappingsSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.dmp_id" .


<#DMPIDMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#DMPIDMappingsSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:DMPId ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant idlab-fn:concat ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:str ;
                            rr:objectMap [              
                                fnml:functionValue [
                                    rr:predicateObjectMap [
                                        rr:predicate fno:executes ;
                                        rr:objectMap [ rr:constant grel:string_md5 ]
                                    ] ;

                                    rr:predicateObjectMap [
                                        rr:predicate grel:valueParameter ;
                                        rr:objectMap [ rml:reference "identifier" ]
                                    ]             
                                ]
                            ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:otherStr ;
                            rr:objectMap [ rr:constant "/dmpId" ]  
                        ]
                    ]
                ]
            ]          
        ]
    ] ;

    # identifier
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;

    # type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifierType ;
        rr:objectMap [ rml:reference "type" ] ;
    ] .



#################################################################
# Mapping for DMP: contact
#################################################################
<#ContactMappingsSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.contact" .


<#ContactMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#ContactMappingsSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:Contact ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/contact/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant grel:string_md5 ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate grel:valueParameter ;
                            rr:objectMap [ rml:reference "contact_id.identifier" ]
                        ]             
                    ]
                ]
            ]          
        ]
    ] ;

    # name
    rr:predicateObjectMap [
        rr:predicate foaf:name ;
        rr:objectMap [ rml:reference "name" ] ;
    ] ;

    # mbox
    rr:predicateObjectMap [
        rr:predicate foaf:mbox ;
        rr:objectMap [ rml:reference "mbox" ] ;
    ] ;

    # contact_id
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasContactId ;
        rr:objectMap [ rr:parentTriplesMap <#ContactIDMapping> ] ;
    ] .



#################################################################
# Mapping for DMP: contact - contact_id
#################################################################
<#ContactIDMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.contact.contact_id" .

<#ContactIDMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#ContactIDMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:ContactId ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/contact/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant idlab-fn:concat ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:str ;
                            rr:objectMap [              
                                fnml:functionValue [
                                    rr:predicateObjectMap [
                                        rr:predicate fno:executes ;
                                        rr:objectMap [ rr:constant grel:string_md5 ]
                                    ] ;

                                    rr:predicateObjectMap [
                                        rr:predicate grel:valueParameter ;
                                        rr:objectMap [ rml:reference "identifier" ]
                                    ]             
                                ]
                            ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:otherStr ;
                            rr:objectMap [ rr:constant "/contactId" ]  
                        ]
                    ]
                ]
            ]          
        ]
    ] ;

    # identifier
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;

    # type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifierType ;
        rr:objectMap [ rml:reference "type" ] ;
    ] .

# #################################################################
# # Mapping for DMP: contributor
# #################################################################
<#ContributorMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.contributor[*]" .

<#ContributorMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#ContributorMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:Contributor ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/contributor/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant grel:string_md5 ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate grel:valueParameter ;
                            rr:objectMap [ rml:reference "contributor_id.identifier" ]
                        ]             
                    ]
                ]
            ]          
        ]
    ] ;

    # name
    rr:predicateObjectMap [
        rr:predicate foaf:name ;
        rr:objectMap [ rml:reference "name" ] ;
    ] ;

    # mbox
    rr:predicateObjectMap [
        rr:predicate foaf:mbox ;
        rr:objectMap [ rml:reference "mbox" ] ;
    ] ;

    # contributor_id
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasContributorId ;
        rr:objectMap [ rr:parentTriplesMap <#ContributorIDMapping> ;
                       rr:joinCondition [
                           rr:child "contributor_id.identifier" ;
                           rr:parent "identifier" ;
                       ] ; 
                    ] ;
    ] ;

    # role
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasRole ;
        rr:objectMap [ rml:reference "role[*]" ] ;
    ] .

#################################################################
# Mapping for DMP: contributor - contributor_id
#################################################################
<#ContributorIDMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.contributor[*].contributor_id" .

<#ContributorIDMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#ContributorIDMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:contributorId ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/contributor/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant idlab-fn:concat ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:str ;
                            rr:objectMap [              
                                fnml:functionValue [
                                    rr:predicateObjectMap [
                                        rr:predicate fno:executes ;
                                        rr:objectMap [ rr:constant grel:string_md5 ]
                                    ] ;

                                    rr:predicateObjectMap [
                                        rr:predicate grel:valueParameter ;
                                        rr:objectMap [ rml:reference "identifier" ]
                                    ]             
                                ]
                            ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:otherStr ;
                            rr:objectMap [ rr:constant "/contrID" ]  
                        ]
                    ]
                ]
            ]          
        ]
    ] ;

    # identifier
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;

    # type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifierType ;
        rr:objectMap [ rml:reference "type" ] ;
    ] .


#################################################################
# Mapping for DMP: project
#################################################################
<#ProjectMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.project[*]" .

<#ProjectMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#ProjectMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:Project ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/project/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant grel:string_md5 ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate grel:valueParameter ;
                            rr:objectMap [ rml:reference "project_id" ]
                        ]             
                    ]
                ]
            ]          
        ]
    ] ;

    # title
    rr:predicateObjectMap [
        rr:predicate dcterms:title ;
        rr:objectMap [ rml:reference "title" ] ;
    ] ;

    # project_id
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasProjectId ;
        rr:objectMap [ rml:reference "project_id" ] ;
    ] ;

    # project_id_type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasProjectIdType ;
        rr:objectMap [ rml:reference "project_id_type" ] ;
    ] ;

    # start
    rr:predicateObjectMap [
        rr:predicate dcso-ont:start ;
        rr:objectMap [ rml:reference "start" ; rr:datatype xsd:dateTime ] ;
    ] ;

    # end
    rr:predicateObjectMap [
        rr:predicate dcso-ont:end ;
        rr:objectMap [ rml:reference "end" ; rr:datatype xsd:dateTime ] ;
    ] ;

    # description
    rr:predicateObjectMap [
        rr:predicate dcterms:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;

    # funding
    # Note: generated_id is created in ToRDFService.kt as the maDMP model does not have an ID for funding
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasFunding ;
        rr:objectMap [
            rr:template "dcso:dmp/project/funding/{funding[*].generated_id}"
        ]
    ] .

#################################################################
# Mapping for DMP: project - funding
#################################################################
<#FundingMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.project[*].funding[*]" .

<#FundingMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#FundingMappingSource> ;

    # Note: generated_id is created in ToRDFService.kt as the maDMP model does not have an ID for funding
    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:Funding ;
        rr:template "dcso:dmp/project/funding/{generated_id}"
    ] ;

    # funder_name
    rr:predicateObjectMap [
        rr:predicate dcterms:title ;
        rr:objectMap [ rml:reference "funder_name" ] ;
    ] ;

    # funder_id
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasFunderId ;
        rr:objectMap [ rr:parentTriplesMap <#funderIDMapping> ] ;
    ] ;

    # grant_id
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasGrantId ;
        rr:objectMap [ rr:parentTriplesMap <#GrantIDMapping> ] ;
    ] .

#################################################################
# Mapping for DMP: project - funding - funding_id
#################################################################
<#funderIDMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.project[*].funding[*].funder_id" .


<#funderIDMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#funderIDMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:FunderId ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/project/funding/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant idlab-fn:concat ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:str ;
                            rr:objectMap [              
                                fnml:functionValue [
                                    rr:predicateObjectMap [
                                        rr:predicate fno:executes ;
                                        rr:objectMap [ rr:constant grel:string_md5 ]
                                    ] ;

                                    rr:predicateObjectMap [
                                        rr:predicate grel:valueParameter ;
                                        rr:objectMap [ rml:reference "identifier" ]
                                    ]             
                                ]
                            ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:otherStr ;
                            rr:objectMap [ rr:constant "/funderID" ]  
                        ]
                    ]
                ]
            ]          
        ]
    ] ;

    # identifier
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;

    # type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifierType ;
        rr:objectMap [ rml:reference "type" ] ;
    ] .

#################################################################
# Mapping for DMP: project - funding - grant_id
#################################################################
<#GrantIDMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.project[*].funding[*].grant_id" .

<#GrantIDMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#GrantIDMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:GrantId ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/project/funding/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant idlab-fn:concat ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:str ;
                            rr:objectMap [              
                                fnml:functionValue [
                                    rr:predicateObjectMap [
                                        rr:predicate fno:executes ;
                                        rr:objectMap [ rr:constant grel:string_md5 ]
                                    ] ;

                                    rr:predicateObjectMap [
                                        rr:predicate grel:valueParameter ;
                                        rr:objectMap [ rml:reference "identifier" ]
                                    ]             
                                ]
                            ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:otherStr ;
                            rr:objectMap [ rr:constant "/grantId" ]  
                        ]
                    ]
                ]
            ]          
        ]
    ] ;

    # identifier
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;

    # type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifierType ;
        rr:objectMap [ rml:reference "type" ] ;
    ] .


#################################################################
# Mapping for DMP: dataset
#################################################################
<#DatasetMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.dataset[*]" .

<#DatasetMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#DatasetMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:Dataset ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/dataset/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant grel:string_md5 ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate grel:valueParameter ;
                            rr:objectMap [ rml:reference "dataset_id.identifier" ]
                        ]             
                    ]
                ]
            ]          
        ]
    ] ;

    # dataset_id
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasDatasetId ;
        rr:objectMap [ rr:parentTriplesMap <#DatasetIDMapping> ;
                       rr:joinCondition [
                           rr:child "dataset_id.identifier" ;
                           rr:parent "identifier" ;
                       ] ; 
                    ] ;
    ] ;

    # title
    rr:predicateObjectMap [
        rr:predicate dcterms:title ;
        rr:objectMap [ rml:reference "title" ] ;
    ] ;

    # personal_data
    rr:predicateObjectMap [
        rr:predicate dcso-ont:personalData ;
        rr:objectMap [ rml:reference "personal_data" ] ;
    ] ;

    # sensitive_data
    rr:predicateObjectMap [
        rr:predicate dcso-ont:sensitiveData ;
        rr:objectMap [ rml:reference "sensitive_data" ] ;
    ] ;

    #type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:datasetType ;
        rr:objectMap [ rml:reference "type" ] ;
    ] ;

    # description
    rr:predicateObjectMap [
        rr:predicate dcterms:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;

    # distribution
    # Note: generated_id is created in ToRDFService.kt as the maDMP model does not have an ID for distribution
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasDistribution ;
        rr:objectMap [ rr:template "dcso:dmp/dataset/distribution/{distribution[*].generated_id}" ]
    ] .


###################################################################
# Mapping for DMP: dataset - dataset_id
###################################################################
<#DatasetIDMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.dataset[*].dataset_id" .

<#DatasetIDMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#DatasetIDMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:DatasetId ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/dataset/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant idlab-fn:concat ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:str ;
                            rr:objectMap [              
                                fnml:functionValue [
                                    rr:predicateObjectMap [
                                        rr:predicate fno:executes ;
                                        rr:objectMap [ rr:constant grel:string_md5 ]
                                    ] ;

                                    rr:predicateObjectMap [
                                        rr:predicate grel:valueParameter ;
                                        rr:objectMap [ rml:reference "identifier" ]
                                    ]             
                                ]
                            ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate idlab-fn:otherStr ;
                            rr:objectMap [ rr:constant "/datasetId" ]  
                        ]
                    ]
                ]
            ]          
        ]
    ] ;

    # identifier
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;

    # type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifierType ;
        rr:objectMap [ rml:reference "type" ] ;
    ] .

###################################################################
# Mapping for DMP: dataset - distribution
###################################################################
<#DistributionMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.dataset[*].distribution[*]" .

<#DistributionMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#DistributionMappingSource> ;

    # Note: generated_id is created in ToRDFService.kt as the maDMP model does not have an ID for distribution
    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:Distribution ;
        rr:template "dcso:dmp/dataset/distribution/{generated_id}"
    ] ;

    # title
    rr:predicateObjectMap [
        rr:predicate dcterms:title ;
        rr:objectMap [ rml:reference "title" ] ;
    ] ;

    # format
    rr:predicateObjectMap [
        rr:predicate dcterms:format ;
        rr:objectMap [ rml:reference "format[*]" ] ;
    ] ;

    # byte_size
    rr:predicateObjectMap [
        rr:predicate dcat:byteSize ;
        rr:objectMap [ rml:reference "byte_size" ] ;
    ] ;

    # data_access
    rr:predicateObjectMap [
        rr:predicate dcso-ont:dataAccess ;
        rr:objectMap [ rml:reference "data_access" ] ;
    ] ;

    # license
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasLicense ;
        rr:objectMap [ rml:reference "license[*].license_ref" ; rr:termType rr:IRI ]
    ] ;

    # host
    rr:predicateObjectMap [
        rr:predicate dcso-ont:hasHost ;
        rr:objectMap [ rr:parentTriplesMap <#HostMapping> ;
                       rr:joinCondition [
                           rr:child "host.url" ;
                           rr:parent "url" ;
                       ] ; 
        ] ;
    ] ;

    # available_until
    rr:predicateObjectMap [
        rr:predicate dcso-ont:availableUntil ;
        rr:objectMap [ rml:reference "available_until" ; rr:datatype xsd:dateTime ] ;
    ] .


######################################################################
# Mapping for DMP: dataset - distribution - license
######################################################################
<#LicenseMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.dataset[*].distribution[*].license[*]" .

<#LicenseMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#LicenseMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:License ;
        rml:reference "license_ref"
    ] ;

    # license_name
    rr:predicateObjectMap [
        rr:predicate dcso-ont:licenseName ;
        rr:objectMap [ rml:reference "license_name" ] ;
    ] ;

    # license_ref
    rr:predicateObjectMap [
        rr:predicate dcso-ont:licenseRef ;
        rr:objectMap [ rml:reference "license_ref" ] ;
    ] ;

    # start_date
    rr:predicateObjectMap [
        rr:predicate dcso-ont:startDate ;
        rr:objectMap [ rml:reference "start_date" ; rr:datatype xsd:dateTime ] ;
    ] .

##########################################################################
# Mapping for DMP: dataset - distribution - host
##########################################################################
<#HostMappingSource>
    a rml:LogicalSource ;
    rml:source "{{madmp_json_path}}" ;
    rml:referenceFormulation ql:JSONPath ;
    rml:iterator "$.dmp.dataset[*].distribution[*].host" .

<#HostMapping>
    a rr:TriplesMap ;
    rml:logicalSource <#HostMappingSource> ;

    rr:subjectMap [
        rr:termType rr:IRI ;
        rr:class dcso-ont:Host ;
        fnml:functionValue [
            rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant idlab-fn:concat ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:str ;
                rr:objectMap [ rr:constant "dcso:dmp/dataset/distribution/host/" ]
            ] ;

            rr:predicateObjectMap [
                rr:predicate idlab-fn:otherStr ;
                rr:objectMap [ 
                    fnml:functionValue [
                        rr:predicateObjectMap [
                            rr:predicate fno:executes ;
                            rr:objectMap [ rr:constant grel:string_md5 ]
                        ] ;

                        rr:predicateObjectMap [
                            rr:predicate grel:valueParameter ;
                            rr:objectMap [ rml:reference "url" ]
                        ]             
                    ]
                ]
            ]          
        ]
    ] ;

    # title
    rr:predicateObjectMap [
        rr:predicate dcterms:title ;
        rr:objectMap [ rml:reference "title" ] ;
    ] ;
    # url
    rr:predicateObjectMap [
        rr:predicate dcso-ont:url ;
        rr:objectMap [ rml:reference "url" ] ;
    ] ; 
    # host_id_type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:identifierType ;
        rr:objectMap [ rml:reference "host_id_type" ] ;
    ] ;
    # description
    rr:predicateObjectMap [
        rr:predicate dcterms:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;

    #supports_versioning
    rr:predicateObjectMap [
        rr:predicate dcso-ont:supportVersioning ;
        rr:objectMap [ rml:reference "supports_versioning" ] ;
    ] ;
    # storage_type
    rr:predicateObjectMap [
        rr:predicate dcso-ont:storageType ;
        rr:objectMap [ rml:reference "storage_type" ] ;
    ] ;
    # pid_system
    rr:predicateObjectMap [
        rr:predicate dcso-ont:pidSystem ;
        rr:objectMap [ rml:reference "pid_system[*]" ] ;
    ] .